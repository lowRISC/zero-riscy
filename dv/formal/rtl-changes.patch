diff --git a/rtl/ibex_id_stage.sv b/rtl/ibex_id_stage.sv
index 3a358af7..3c19d763 100644
--- a/rtl/ibex_id_stage.sv
+++ b/rtl/ibex_id_stage.sv
@@ -522,7 +522,7 @@ module ibex_id_stage #(
     // - When modifying any PMP CSR, PMP check of the next instruction might get invalidated.
     //   Hence, a pipeline flush is needed to instantiate another PMP check with the updated CSRs.
     // - When modifying debug CSRs.
-    if (csr_op_en_o == 1'b1 && (csr_op_o == CSR_OP_WRITE || csr_op_o == CSR_OP_SET)) begin
+    if (csr_op_en_o == 1'b1 && (csr_op_o == CSR_OP_WRITE || csr_op_o == CSR_OP_SET || csr_op_o == CSR_OP_CLEAR)) begin
       if (csr_num_e'(instr_rdata_i[31:20]) == CSR_MSTATUS ||
           csr_num_e'(instr_rdata_i[31:20]) == CSR_MIE     ||
           csr_num_e'(instr_rdata_i[31:20]) == CSR_MSECCFG ||
diff --git a/rtl/ibex_top.sv b/rtl/ibex_top.sv
index 81e49633..17b36c17 100644
--- a/rtl/ibex_top.sv
+++ b/rtl/ibex_top.sv
@@ -142,7 +142,7 @@ module ibex_top import ibex_pkg::*; #(
 );
 
   localparam bit          Lockstep              = SecureIbex;
-  localparam bit          ResetAll              = Lockstep;
+  localparam bit          ResetAll              = 1;
   localparam bit          DummyInstructions     = SecureIbex;
   localparam bit          RegFileECC            = SecureIbex;
   localparam bit          RegFileWrenCheck      = SecureIbex;
@@ -236,12 +236,13 @@ module ibex_top import ibex_pkg::*; #(
 
   assign core_sleep_o = ~clock_en;
 
-  prim_clock_gating core_clock_gate_i (
-    .clk_i    (clk_i),
-    .en_i     (clock_en),
-    .test_en_i(test_en_i),
-    .clk_o    (clk)
-  );
+  assign clk = clk_i;
+  // prim_clock_gating core_clock_gate_i (
+  //   .clk_i    (clk_i),
+  //   .en_i     (clock_en),
+  //   .test_en_i(test_en_i),
+  //   .clk_o    (clk)
+  // );
 
   ////////////////////////
   // Core instantiation //
